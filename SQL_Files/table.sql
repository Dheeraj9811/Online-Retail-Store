DROP DATABASE IF EXISTS Online_shopping_site;
CREATE DATABASE Online_shopping_site;
use Online_shopping_site;

CREATE TABLE Address (
  Address_id INT AUTO_INCREMENT PRIMARY KEY,
  HouseNo VARCHAR(10) NOT NULL,
  City VARCHAR(50) NOT NULL,
  Line_1 VARCHAR(100),
  Pincode INT NOT NULL
);
-- ALTER TABLE Address
-- CHANGE COLUMN Line_1 Line_1 VARCHAR(100) DEFAULT 'NA';


CREATE TABLE Customer(
C_id INT auto_increment PRIMARY KEY,
F_name VARCHAR(50) NOT NULL,
M_name VARCHAR(50),
L_name VARCHAR(50) NOT NULL,
Phn_n VARCHAR(16) NOT NULL,
Email VARCHAR(100) NOT NULL UNIQUE,
Gender ENUM('M','F','OTHER') NOT NULL,
Address_id INT,
Pass VARCHAR(30) NOT NULL,
FOREIGN KEY (Address_id) REFERENCES Address(Address_id) ON DELETE SET NULL

);

CREATE TABLE PRODUCT(
P_id INT AUTO_INCREMENT PRIMARY KEY,
P_name VARCHAR(100) NOT NULL,
P_type VARCHAR(50) NOT NULL,
Price DECIMAL(10,2) NOT NULL,
S_quantity INT NOT NULL DEFAULT 0,
Descr TEXT,
CONSTRAINT price_positive  CHECK( Price>0),
CONSTRAINT price_COUNT  CHECK( S_quantity>=0) 
);
ALTER TABLE product ADD UNIQUE (P_name, P_type);

CREATE TABLE Cart(
Ca_id INT AUTO_INCREMENT PRIMARY KEY,
C_id INT NOT NULL,
COUNT INT NOT NULL,
T_cost DECIMAL(10,2) NOT NULL,
FOREIGN KEY (C_id) REFERENCES Customer(C_id) ON DELETE CASCADE
);

CREATE TABLE Cart_Products (
  Cp_id INT AUTO_INCREMENT PRIMARY KEY,
  Ca_id INT NOT NULL,
  P_id INT ,
  COUNT INT NOT NULL,
  FOREIGN KEY (Ca_id) REFERENCES Cart(Ca_id) ON DELETE CASCADE,
  FOREIGN KEY (P_id) REFERENCES Product(P_id) ON DELETE SET NULL
);
ALTER TABLE cart_products ADD UNIQUE (ca_id, P_id);

CREATE TABLE Order_ (
  O_id INT AUTO_INCREMENT PRIMARY KEY,
  C_id INT NOT NULL,
  O_date DATE NOT NULL,
  Ship_date DATE NOT NULL,
  T_cost DECIMAL(10, 2) NOT NULL,
  FOREIGN KEY (C_id) REFERENCES Customer(C_id) ON DELETE CASCADE
);

CREATE TABLE Employees (
  Emp_id INT AUTO_INCREMENT PRIMARY KEY,
  F_name VARCHAR(50) NOT NULL,
  L_name VARCHAR(50) NOT NULL,
  M_name VARCHAR(50) DEFAULT '',
  Phn_no VARCHAR(15) NOT NULL,
  Email VARCHAR(100) NOT NULL UNIQUE,
  Gender ENUM('M', 'F', 'OTHER') NOT NULL,
  Pass VARCHAR(30) NOT NULL
);

CREATE TABLE Suppliers (
  Sup_id INT AUTO_INCREMENT PRIMARY KEY,
  Sup_name VARCHAR(100) NOT NULL,
  P_id INT NOT NULL,
  Quantity INT NOT NULL,
  Phn_no VARCHAR(15) NOT NULL,
  Email_id VARCHAR(100) NOT NULL UNIQUE,
  FOREIGN KEY (P_id) REFERENCES Product(P_id) ON DELETE CASCADE
);

CREATE TABLE Payment (
  Payment_id INT AUTO_INCREMENT PRIMARY KEY,
  C_id INT NOT NULL,
  O_id INT ,
  Total_cost DECIMAL(10, 2) NOT NULL,
  P_mode VARCHAR(20) NOT NULL,
  FOREIGN KEY (C_id) REFERENCES Customer(C_id) ON DELETE CASCADE,
  FOREIGN KEY (O_id) REFERENCES Order_(O_id)  ON DELETE CASCADE
);

CREATE TABLE Complaints (
  Complain_id INT AUTO_INCREMENT PRIMARY KEY,
  P_id INT NOT NULL,
  Complain_date DATE NOT NULL,
  Comments TEXT NOT NULL,
  FOREIGN KEY (P_id) REFERENCES Product(P_id) ON delete CASCADE
);

CREATE TABLE Shipping_Details (
  Ship_id INT AUTO_INCREMENT PRIMARY KEY,
  P_id INT NOT NULL,
  Pos VARCHAR(200) NOT NULL,
  FOREIGN KEY (P_id) REFERENCES Product(P_id) ON DELETE CASCADE
);

CREATE TABLE Feedback (
  Feedback_id INT AUTO_INCREMENT PRIMARY KEY,
  C_id INT ,
  P_id INT NOT NULL,
  Comm TEXT NOT NULL,
  FOREIGN KEY (C_id) REFERENCES Customer(C_id) ON DELETE SET NULL,
  FOREIGN KEY (P_id) REFERENCES Product(P_id) ON DELETE  CASCADE
);








